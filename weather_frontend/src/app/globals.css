@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200 min-h-screen;
  }
}

@layer components {
  .fade-in {
    animation: fadeIn 0.3s ease-out forwards;
  }

  .wind-arrow {
    transition: transform 0.3s ease;
  }

  .humidity-bar {
    transition: width 0.5s ease-in-out;
  }

  .weather-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
  }

  .search-results {
    max-height: 300px;
    overflow-y: auto;
    scrollbar-width: thin;
  }

  .search-results::-webkit-scrollbar {
    width: 6px;
  }

  .search-results::-webkit-scrollbar-thumb {
    background-color: rgba(156, 163, 175, 0.5);
    border-radius: 3px;
  }

  .temperature-graph {
    height: 100px;
  }

  .loading-pulse {
    animation: pulse 1.5s infinite;
  }

  .alert-flash {
    animation: alertFlash 2s infinite;
  }

  /* Animated backgrounds */  .animate-clouds {
    background-image: url("/home/ubuntu/cloud_texture.jpeg");
    background-repeat: repeat;
    animation: moveClouds 60s linear infinite;
  }

  .animate-sunshine {
    /* Simple radial gradient for sunshine effect */
    background-image: radial-gradient(circle at top left, rgba(255,255,220,0.5) 0%, rgba(255,255,220,0) 50%);
    animation: pulseSunshine 10s ease-in-out infinite alternate;
  }
  
  .animate-snow {
    background-image: 
      url("data:image/svg+xml,%3Csvg width=\'20\' height=\'20\' viewBox=\'0 0 20 20\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Ccircle cx=\'5\' cy=\'5\' r=\'2\' fill=\'%23FFFFFF\' fill-opacity=\'0.7\'/%3E%3Ccircle cx=\'15\' cy=\'15\' r=\'1.5\' fill=\'%23FFFFFF\' fill-opacity=\'0.6\'/%3E%3Ccircle cx=\'2\' cy=\'15\' r=\'1\' fill=\'%23FFFFFF\' fill-opacity=\'0.5\'/%3E%3Ccircle cx=\'18\' cy=\'5\' r=\'1.2\' fill=\'%23FFFFFF\' fill-opacity=\'0.6\'/%3E%3C/svg%3E");
    animation: fallSnow 10s linear infinite;
  }

  /* Water Droplet Animation */
  .water-droplets-bg {
    /* This class is mainly a trigger; the actual droplets are in the container */
    /* You can add a subtle background color shift here if desired */
  }

  .water-droplets-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* So it doesn't interfere with clicks */
    overflow: hidden; /* Keep droplets within bounds */
  }

  .droplet {
    position: absolute;
    bottom: 100%; /* Start above the screen */
    width: var(--droplet-width, 2px);
    height: var(--droplet-height, 10px); /* Teardrop shape */
    background-color: rgba(220, 220, 225, 0.5); /* Adjusted droplet color */
    border-radius: 0% 0% 50% 50% / 0% 0% 100% 100%; /* Teardrop shape */
    animation: fall var(--fall-duration) linear infinite, 
               slide var(--slide-duration) ease-in-out infinite alternate;
    opacity: 0;
  }

  /* Create multiple droplets with varied animations using SASS/SCSS would be easier, 
     but for plain CSS we can define a few by hand or generate them with JS in page.tsx if needed.
     For now, let's define a few with different delays and positions. 
     In page.tsx, we would need to render these droplet divs inside .water-droplets-container */
  
  /* Example of how droplets could be styled if generated by JS in page.tsx */
  /* 
  .droplet:nth-child(1) { animation-delay: 0s, 0s; left: 10%; --fall-duration: 1s; --slide-duration: 2s; }
  .droplet:nth-child(2) { animation-delay: 0.5s, 0.2s; left: 25%; --fall-duration: 0.8s; --slide-duration: 2.5s; }
  .droplet:nth-child(3) { animation-delay: 0.2s, 0.1s; left: 40%; --fall-duration: 1.2s; --slide-duration: 1.8s; }
  etc. 
  */

}

@keyframes moveClouds {
  0% { background-position: 0px 0px; }
  100% { background-position: -1000px 0px; }
}

/* Removed old fallRain keyframes */

@keyframes pulseSunshine {
  0% { opacity: 0.6; transform: scale(1); }
  100% { opacity: 1; transform: scale(1.05); }
}

@keyframes fallSnow {
  0% { background-position: 0px 0px; }
  100% { background-position: 20px 100px; }
}

@keyframes fall {
  0% {
    transform: translateY(0vh) scaleY(1) scaleX(1);
    opacity: var(--droplet-opacity, 0.7); /* Use CSS variable for opacity */
  }
  70% {
    opacity: var(--droplet-opacity, 0.7); /* Use CSS variable for opacity */
  }
  100% {
    transform: translateY(100vh) scaleY(1.5) scaleX(0.8); /* Droplet falls and slightly flattens */
    opacity: 0;
  }
}

@keyframes slide {
  0% {
    transform: translateX(0px);
    margin-left: 0px;
  }
  100% {
    transform: translateX(var(--slide-amount, 5px)); /* Slide slightly, can be randomized with JS */
    margin-left: var(--slide-amount, 5px);
  }
}

/* Keyframes for fadeIn, pulse, alertFlash are already defined in tailwind.config.ts and will be picked up by Tailwind JIT */
